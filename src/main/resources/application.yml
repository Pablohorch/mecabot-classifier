spring:
  application:
    name: mecabot-classifier
  profiles:
    active: dev # Default profile if none is specified

---

spring:
  config:
    activate:
      on-profile: dev
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    url: jdbc:h2:mem:mecabotdb_dev;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
    driverClassName: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update # or create-drop for dev if preferred
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true

---

spring:
  config:
    activate:
      on-profile: test
  h2:
    console:
      enabled: false # Usually disabled for automated tests
  datasource:
    url: jdbc:h2:mem:mecabotdb_test;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
    driverClassName: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop # Ensures clean slate for each test run
    show-sql: false
    properties:
      hibernate:
        format_sql: false
    defer-datasource-initialization: true

---

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:mecabot_prod_db}
    username: ${DB_USER:mecabot_user_placeholder}
    password: ${DB_PASSWORD_PLACEHOLDER} # Must be set via environment variable
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate # Safest for production, or 'none' if using external migration tools like Flyway/Liquibase
    show-sql: true # Or false in production, depending on needs
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true # Often needed for PostgreSQL with Blobs/Clobs

# Configurations below this line are common to all profiles
# (unless overridden within a specific profile)

openai:
  api:
    key: ${OPENAI_API_KEY:YOUR_OPENAI_KEY_HERE_FOR_LOCAL_DEV_ONLY_NEVER_COMMIT_REAL_KEY}
    url: ${OPENAI_API_URL:https://api.openai.com/v1/chat/completions}
  model: ${OPENAI_MODEL:gpt-3.5-turbo}

server:
  port: ${SERVER_PORT:8080}

# MCP (Mecabot Common Platform) Client Configuration
mcp:
  service:
    url: ${MCP_SERVICE_URL:YOUR_MCP_URL_HERE_PLACEHOLDER}
    apikey: ${MCP_API_KEY_PLACEHOLDER:} # Allows empty if no API key is needed by defaulting to an empty string
    timeout:
      connect: ${MCP_CONNECT_TIMEOUT:5000} # in ms
      read: ${MCP_READ_TIMEOUT:10000}    # in ms

# WhatsApp Client Configuration
whatsapp:
  api:
    url: ${WHATSAPP_API_URL:https://graph.facebook.com/v18.0} # Base URL, specific path often built in code
    token: ${WHATSAPP_API_TOKEN_PLACEHOLDER}
  phonenumber:
    id: ${WHATSAPP_PHONE_NUMBER_ID_PLACEHOLDER}
